{
	"name": "Populate_dboDimMovie",
	"properties": {
		"description": "Module 8",
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Azure_SQL_Movies_dbo_tMovies",
						"type": "DatasetReference"
					},
					"name": "tMovies"
				},
				{
					"dataset": {
						"referenceName": "Azure_SQL_Movies_dbo_tMovieStatus",
						"type": "DatasetReference"
					},
					"name": "tMovieStatus"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "Azure_SQL_DataMart_dbo_DimMovie",
						"type": "DatasetReference"
					},
					"name": "DimMovie"
				}
			],
			"transformations": [
				{
					"name": "AddMovieStatusCreatedDateModifiedDate"
				},
				{
					"name": "tMoviesAndtMovieStatus"
				}
			],
			"scriptLines": [
				"source(output(",
				"          MovieId as integer,",
				"          MovieIdNK as integer,",
				"          Budget as integer,",
				"          HomepagePath as string,",
				"          Title as string,",
				"          OriginalTitle as string,",
				"          ReleaseDate as date,",
				"          Revenue as long,",
				"          Runtime as integer,",
				"          MovieStatusId as integer,",
				"          AvgVote as decimal(3,1),",
				"          CreatedDate as timestamp,",
				"          ModifiedDate as timestamp,",
				"          SrcFileName as string",
				"     ),",
				"     allowSchemaDrift: false,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> tMovies",
				"source(output(",
				"          MovieStatusId as integer,",
				"          MovieStatusName as string,",
				"          CreatedDate as timestamp",
				"     ),",
				"     allowSchemaDrift: false,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> tMovieStatus",
				"tMoviesAndtMovieStatus derive(MovieStatus = MovieStatusName,",
				"          CreatedDate = currentUTC(),",
				"          ModifiedDate = currentUTC()) ~> AddMovieStatusCreatedDateModifiedDate",
				"tMovies, tMovieStatus join(tMovies@MovieStatusId == tMovieStatus@MovieStatusId,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> tMoviesAndtMovieStatus",
				"AddMovieStatusCreatedDateModifiedDate sink(allowSchemaDrift: false,",
				"     validateSchema: false,",
				"     input(",
				"          MovieKey as integer,",
				"          MovieIdNK as integer,",
				"          Title as string,",
				"          ReleaseDate as date,",
				"          Runtime as integer,",
				"          MovieStatus as string,",
				"          CreatedDate as timestamp,",
				"          ModifiedDate as timestamp",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     truncate:true,",
				"     format: 'table',",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          MovieIdNK,",
				"          Title,",
				"          ReleaseDate,",
				"          Runtime,",
				"          MovieStatus,",
				"          CreatedDate,",
				"          ModifiedDate",
				"     )) ~> DimMovie"
			]
		}
	}
}