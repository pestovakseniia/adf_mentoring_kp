{
	"name": "CopyFromSQLToAzureSQL",
	"properties": {
		"description": "Module 6",
		"activities": [
			{
				"name": "GetLastModifiedDate",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "SELECT coalesce(MAX(LastModified), '1900.01.01 00:00:00.000Z') AS LastModified \n    FROM [metadata].[WatermarkControl] \n    WHERE ProcessName = 'CopyFromSQLToAzureSQL'",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "Azure_SQL_Movies_metadata_WatermarkControl",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "CopyToAzureSQL",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "SetLastModified",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"sqlReaderQuery": {
							"value": "SELECT * \nFROM [dbo].[Tickets] \nWHERE TransactionDt > '@{variables('LastModified')}'\n",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"sink": {
						"type": "AzureSqlSink",
						"preCopyScript": "TRUNCATE TABLE stg.cinema_tickets",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false,
						"disableMetricsCollection": false
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "CinemaCode",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "cinema_code",
									"type": "String",
									"physicalType": "nvarchar"
								}
							},
							{
								"source": {
									"name": "CinemaName",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "cinema_name",
									"type": "String",
									"physicalType": "nvarchar"
								}
							},
							{
								"source": {
									"name": "MovieId",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "movie_id",
									"type": "Int32",
									"physicalType": "int"
								}
							},
							{
								"source": {
									"name": "TicketCount",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "ticket_count",
									"type": "Int32",
									"physicalType": "int"
								}
							},
							{
								"source": {
									"name": "TicketPrice",
									"type": "Decimal",
									"physicalType": "decimal",
									"scale": 1,
									"precision": 4
								},
								"sink": {
									"name": "ticket_price",
									"type": "Decimal",
									"physicalType": "decimal",
									"scale": 1,
									"precision": 4
								}
							},
							{
								"source": {
									"name": "TransactionId",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "transaction_id",
									"type": "String",
									"physicalType": "nvarchar"
								}
							},
							{
								"source": {
									"name": "TransactionDt",
									"type": "DateTime",
									"physicalType": "datetime"
								},
								"sink": {
									"name": "transaction_date",
									"type": "DateTime",
									"physicalType": "datetime"
								}
							}
						],
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "SQL_CimenaTickets_Tickets",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "Azure_SQL_Movies_stg_cinema_tickets",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "ForEachStoredProcedure",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "UpdateLastModified",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@pipeline().parameters.storedProceduresNames",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "Stored procedure1",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": {
									"value": "@item()",
									"type": "Expression"
								}
							},
							"linkedServiceName": {
								"referenceName": "mentoring_azure_sql_server_movies_ls",
								"type": "LinkedServiceReference"
							}
						}
					]
				}
			},
			{
				"name": "SetLastModified",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "GetLastModifiedDate",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "LastModified",
					"value": {
						"value": "@activity('GetLastModifiedDate').output.firstRow.LastModified",
						"type": "Expression"
					}
				}
			},
			{
				"name": "UpdateLastModified",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "CopyToAzureSQL",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[metadata].[UpdateWatermarkCinemaTickets]",
					"storedProcedureParameters": {
						"ProcessName": {
							"value": {
								"value": "@pipeline().Pipeline",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "mentoring_azure_sql_server_movies_ls",
					"type": "LinkedServiceReference"
				}
			}
		],
		"parameters": {
			"storedProceduresNames": {
				"type": "array",
				"defaultValue": [
					"[dbo].[spPopulateCinema]",
					"[dbo].[spPopulateCinemaTickets]"
				]
			}
		},
		"variables": {
			"LastModified": {
				"type": "String"
			}
		},
		"annotations": [],
		"lastPublishTime": "2025-08-15T08:11:39Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}